{"version":3,"sources":["components/calculator.js","logic/operate.js","App.js","logic/calculate.js","index.js"],"names":["calculator","props","className","total","operation","next","type","onClick","onClickHandler","operate","numberOne","numberTwo","one","Big","two","plus","toString","minus","times","div","err","mod","Error","App","useState","state","setState","e","obj","buttonName","target","innerHTML","match","includes","parseFloat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2e3b31a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction calculator(props) {\n  return (\n    <div className=\"calculator\">\n      <div className=\"calculator-screen\">\n        <p className=\"calculator-digits\">{`${props.total} ${props.operation} ${props.next}`}</p>\n      </div>\n      <div className=\"calculator-buttons\">\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>AC</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>+/-</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>%</button>\n        <button className=\"calculator-button orange-button\" type=\"button\" onClick={props.onClickHandler}>/</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>7</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>8</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>9</button>\n        <button className=\"calculator-button orange-button\" type=\"button\" onClick={props.onClickHandler}>x</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>4</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>5</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>6</button>\n        <button className=\"calculator-button orange-button\" type=\"button\" onClick={props.onClickHandler}>-</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>1</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>2</button>\n        <button className=\"calculator-button\" type=\"button\" onClick={props.onClickHandler}>3</button>\n        <button className=\"calculator-button orange-button\" type=\"button\" onClick={props.onClickHandler}>+</button>\n      </div>\n      <div className=\"calculator-buttons-bottom\">\n        <button className=\"calculator-button-bottom button-one\" type=\"button\" onClick={props.onClickHandler}>0</button>\n        <button className=\"calculator-button-bottom button-two\" type=\"button\" onClick={props.onClickHandler}>.</button>\n        <button className=\"calculator-button-bottom button-three orange-button-bottom\" type=\"button\" onClick={props.onClickHandler}>=</button>\n      </div>\n    </div>\n  );\n}\n\nexport default calculator;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === '/') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport Calculator from './components/calculator';\nimport './App.css';\nimport calculate from './logic/calculate';\n\nfunction App() {\n  const [state, setState] = useState({\n    total: 0,\n    next: null,\n    operation: null,\n  });\n\n  const handleEvent = (e) => {\n    setState({ ...state, ...calculate(state, e.target.innerHTML) });\n  };\n\n  const { total, next, operation } = state;\n\n  return (\n    <div>\n      <Calculator\n        total={total !== null ? total : ''}\n        next={next !== null ? next : ''}\n        operation={operation !== null ? operation : ''}\n        onClickHandler={handleEvent}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: 0,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}